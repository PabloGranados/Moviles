// Generated by view binder compiler. Do not edit!
package com.example.dinosaurapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dinosaurapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExploreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivPoint1;

  @NonNull
  public final ImageView ivPoint2;

  @NonNull
  public final ImageView ivPoint3;

  @NonNull
  public final CardView mapCard;

  @NonNull
  public final RecyclerView rvExplorationSites;

  @NonNull
  public final TextView tvExploreTitle;

  private FragmentExploreBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivPoint1,
      @NonNull ImageView ivPoint2, @NonNull ImageView ivPoint3, @NonNull CardView mapCard,
      @NonNull RecyclerView rvExplorationSites, @NonNull TextView tvExploreTitle) {
    this.rootView = rootView;
    this.ivPoint1 = ivPoint1;
    this.ivPoint2 = ivPoint2;
    this.ivPoint3 = ivPoint3;
    this.mapCard = mapCard;
    this.rvExplorationSites = rvExplorationSites;
    this.tvExploreTitle = tvExploreTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivPoint1;
      ImageView ivPoint1 = ViewBindings.findChildViewById(rootView, id);
      if (ivPoint1 == null) {
        break missingId;
      }

      id = R.id.ivPoint2;
      ImageView ivPoint2 = ViewBindings.findChildViewById(rootView, id);
      if (ivPoint2 == null) {
        break missingId;
      }

      id = R.id.ivPoint3;
      ImageView ivPoint3 = ViewBindings.findChildViewById(rootView, id);
      if (ivPoint3 == null) {
        break missingId;
      }

      id = R.id.mapCard;
      CardView mapCard = ViewBindings.findChildViewById(rootView, id);
      if (mapCard == null) {
        break missingId;
      }

      id = R.id.rvExplorationSites;
      RecyclerView rvExplorationSites = ViewBindings.findChildViewById(rootView, id);
      if (rvExplorationSites == null) {
        break missingId;
      }

      id = R.id.tvExploreTitle;
      TextView tvExploreTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvExploreTitle == null) {
        break missingId;
      }

      return new FragmentExploreBinding((ConstraintLayout) rootView, ivPoint1, ivPoint2, ivPoint3,
          mapCard, rvExplorationSites, tvExploreTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

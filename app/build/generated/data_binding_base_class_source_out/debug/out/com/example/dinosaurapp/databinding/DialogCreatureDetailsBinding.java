// Generated by view binder compiler. Do not edit!
package com.example.dinosaurapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dinosaurapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCreatureDetailsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnCloseDialog;

  @NonNull
  public final Button btnExploreMore;

  @NonNull
  public final ImageView ivCloseDialog;

  @NonNull
  public final ImageView ivCreatureIcon;

  @NonNull
  public final TextView tvCreatureCharacteristics;

  @NonNull
  public final TextView tvCreatureDescription;

  @NonNull
  public final TextView tvCreatureDiet;

  @NonNull
  public final TextView tvCreatureDiscovery;

  @NonNull
  public final TextView tvCreatureHabitat;

  @NonNull
  public final TextView tvCreatureName;

  @NonNull
  public final TextView tvCreatureScientific;

  @NonNull
  public final TextView tvCreatureSize;

  private DialogCreatureDetailsBinding(@NonNull CardView rootView, @NonNull Button btnCloseDialog,
      @NonNull Button btnExploreMore, @NonNull ImageView ivCloseDialog,
      @NonNull ImageView ivCreatureIcon, @NonNull TextView tvCreatureCharacteristics,
      @NonNull TextView tvCreatureDescription, @NonNull TextView tvCreatureDiet,
      @NonNull TextView tvCreatureDiscovery, @NonNull TextView tvCreatureHabitat,
      @NonNull TextView tvCreatureName, @NonNull TextView tvCreatureScientific,
      @NonNull TextView tvCreatureSize) {
    this.rootView = rootView;
    this.btnCloseDialog = btnCloseDialog;
    this.btnExploreMore = btnExploreMore;
    this.ivCloseDialog = ivCloseDialog;
    this.ivCreatureIcon = ivCreatureIcon;
    this.tvCreatureCharacteristics = tvCreatureCharacteristics;
    this.tvCreatureDescription = tvCreatureDescription;
    this.tvCreatureDiet = tvCreatureDiet;
    this.tvCreatureDiscovery = tvCreatureDiscovery;
    this.tvCreatureHabitat = tvCreatureHabitat;
    this.tvCreatureName = tvCreatureName;
    this.tvCreatureScientific = tvCreatureScientific;
    this.tvCreatureSize = tvCreatureSize;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCreatureDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCreatureDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_creature_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCreatureDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCloseDialog;
      Button btnCloseDialog = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseDialog == null) {
        break missingId;
      }

      id = R.id.btnExploreMore;
      Button btnExploreMore = ViewBindings.findChildViewById(rootView, id);
      if (btnExploreMore == null) {
        break missingId;
      }

      id = R.id.ivCloseDialog;
      ImageView ivCloseDialog = ViewBindings.findChildViewById(rootView, id);
      if (ivCloseDialog == null) {
        break missingId;
      }

      id = R.id.ivCreatureIcon;
      ImageView ivCreatureIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivCreatureIcon == null) {
        break missingId;
      }

      id = R.id.tvCreatureCharacteristics;
      TextView tvCreatureCharacteristics = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureCharacteristics == null) {
        break missingId;
      }

      id = R.id.tvCreatureDescription;
      TextView tvCreatureDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureDescription == null) {
        break missingId;
      }

      id = R.id.tvCreatureDiet;
      TextView tvCreatureDiet = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureDiet == null) {
        break missingId;
      }

      id = R.id.tvCreatureDiscovery;
      TextView tvCreatureDiscovery = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureDiscovery == null) {
        break missingId;
      }

      id = R.id.tvCreatureHabitat;
      TextView tvCreatureHabitat = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureHabitat == null) {
        break missingId;
      }

      id = R.id.tvCreatureName;
      TextView tvCreatureName = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureName == null) {
        break missingId;
      }

      id = R.id.tvCreatureScientific;
      TextView tvCreatureScientific = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureScientific == null) {
        break missingId;
      }

      id = R.id.tvCreatureSize;
      TextView tvCreatureSize = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureSize == null) {
        break missingId;
      }

      return new DialogCreatureDetailsBinding((CardView) rootView, btnCloseDialog, btnExploreMore,
          ivCloseDialog, ivCreatureIcon, tvCreatureCharacteristics, tvCreatureDescription,
          tvCreatureDiet, tvCreatureDiscovery, tvCreatureHabitat, tvCreatureName,
          tvCreatureScientific, tvCreatureSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.dinosaurapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dinosaurapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCreatureCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivCreatureImage;

  @NonNull
  public final ImageView ivDetailArrow;

  @NonNull
  public final LinearLayout textContent;

  @NonNull
  public final TextView tvCreatureDescription;

  @NonNull
  public final TextView tvCreatureDiet;

  @NonNull
  public final TextView tvCreatureName;

  @NonNull
  public final TextView tvCreatureScientificName;

  @NonNull
  public final TextView tvEraTag;

  @NonNull
  public final TextView tvSizeTag;

  private ItemCreatureCardBinding(@NonNull CardView rootView, @NonNull ImageView ivCreatureImage,
      @NonNull ImageView ivDetailArrow, @NonNull LinearLayout textContent,
      @NonNull TextView tvCreatureDescription, @NonNull TextView tvCreatureDiet,
      @NonNull TextView tvCreatureName, @NonNull TextView tvCreatureScientificName,
      @NonNull TextView tvEraTag, @NonNull TextView tvSizeTag) {
    this.rootView = rootView;
    this.ivCreatureImage = ivCreatureImage;
    this.ivDetailArrow = ivDetailArrow;
    this.textContent = textContent;
    this.tvCreatureDescription = tvCreatureDescription;
    this.tvCreatureDiet = tvCreatureDiet;
    this.tvCreatureName = tvCreatureName;
    this.tvCreatureScientificName = tvCreatureScientificName;
    this.tvEraTag = tvEraTag;
    this.tvSizeTag = tvSizeTag;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCreatureCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCreatureCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_creature_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCreatureCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCreatureImage;
      ImageView ivCreatureImage = ViewBindings.findChildViewById(rootView, id);
      if (ivCreatureImage == null) {
        break missingId;
      }

      id = R.id.ivDetailArrow;
      ImageView ivDetailArrow = ViewBindings.findChildViewById(rootView, id);
      if (ivDetailArrow == null) {
        break missingId;
      }

      id = R.id.textContent;
      LinearLayout textContent = ViewBindings.findChildViewById(rootView, id);
      if (textContent == null) {
        break missingId;
      }

      id = R.id.tvCreatureDescription;
      TextView tvCreatureDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureDescription == null) {
        break missingId;
      }

      id = R.id.tvCreatureDiet;
      TextView tvCreatureDiet = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureDiet == null) {
        break missingId;
      }

      id = R.id.tvCreatureName;
      TextView tvCreatureName = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureName == null) {
        break missingId;
      }

      id = R.id.tvCreatureScientificName;
      TextView tvCreatureScientificName = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatureScientificName == null) {
        break missingId;
      }

      id = R.id.tvEraTag;
      TextView tvEraTag = ViewBindings.findChildViewById(rootView, id);
      if (tvEraTag == null) {
        break missingId;
      }

      id = R.id.tvSizeTag;
      TextView tvSizeTag = ViewBindings.findChildViewById(rootView, id);
      if (tvSizeTag == null) {
        break missingId;
      }

      return new ItemCreatureCardBinding((CardView) rootView, ivCreatureImage, ivDetailArrow,
          textContent, tvCreatureDescription, tvCreatureDiet, tvCreatureName,
          tvCreatureScientificName, tvEraTag, tvSizeTag);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
